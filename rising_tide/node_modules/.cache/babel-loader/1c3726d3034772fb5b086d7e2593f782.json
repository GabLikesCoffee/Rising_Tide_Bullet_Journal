{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\src\\\\components\\\\journal.component.js\";\n//JOURNAL PAGE\n\nimport React, { Component } from 'react';\nimport seashell from '../Assets/shell.PNG';\nimport happy from '../Assets/happy.PNG';\nimport ecstatic from '../Assets/ecstatic.PNG';\nimport excited from '../Assets/excited.PNG';\nimport sad from '../Assets/sad.PNG';\nimport depressed from '../Assets/depressed.PNG';\nimport hopeless from '../Assets/hopeless.PNG';\nimport mad from '../Assets/mad.PNG';\nimport angry from '../Assets/angry.PNG';\nimport disgusted from '../Assets/disgusted.PNG';\n\n//Value for if the habit input textbox is out or not\nvar textBoxUp = false;\n\n//Creates array for habits (current habits should be loaded into this array from the database)\nvar habitsArray = [];\n\n//Creates a date for this journal (should either be today or a day from the past week)\nvar day = new Date().getDate().toString();\nvar month = new Date().getMonth();\nmonth = month + 1;\nmonth = month.toString();\nvar year = new Date().getFullYear().toString();\n\n//False if not showing the delete buttons\nvar showingDeleteButtons = false;\n\n//Temporary variables for the email and post commands\nvar email, emailString;\n\n//Function for counting how many characters are left in the daily affirmation\nvar countChars = function countChars(event) {\n  //Value for an ! if the limit is reached\n  var end = \"\";\n\n  //If limit is reached color the text red and add a !\n  if (event.target.value.length === 500) {\n    document.getElementById(\"charactersLeft\").style = \"color: red\";\n    end = \"!\";\n  } else {\n    document.getElementById(\"charactersLeft\").style = \"color: black\";\n    end = \"\";\n  }\n\n  //Set up a string for the message counter # + \"characters left\" + optional !\n  var val = 500 - event.target.value.length;\n  var string = \" characters left\";\n  var fullString = val + string + end;\n\n  //Display message\n  document.getElementById(\"charactersLeft\").innerHTML = fullString;\n};\n\n//Adds a new habit upon pressing the + button\nvar addHabit = function addHabit(event) {\n  //Hides delete buttons\n  if (showingDeleteButtons === true) {\n    showingDeleteButtons = false;\n    var buttons = document.getElementsByClassName(\"deleteButton\");\n    var i;\n    for (i = 0; i < buttons.length; i++) {\n      buttons[i].setAttribute(\"hidden\", true);\n    }\n  }\n\n  //Finds habit table element\n  var habitTable = document.getElementById(\"habitTable\");\n\n  //Temporary row and cell variables\n  var row;\n  var cell;\n\n  //Creates a habit object for the habit being added\n  var habitObject = {\n    activity: \"\",\n    activated: false,\n    isCompleted: false,\n    completionDate: {\n      day: 0,\n      month: \"\",\n      year: 0\n    }\n  };\n\n  //Saves ID for the habit\n  var id;\n\n  //Saves ID for delete buttons\n  var deleteId;\n\n  //Saves habit checkbox string for the table\n  var habitHTMLString;\n\n  //If the add habit textbox is not open, it will be opened so the user can add input\n  if (textBoxUp === false) {\n    //The textbox row is now up\n    textBoxUp = true;\n\n    //creates a row\n    row = habitTable.insertRow(1);\n\n    //inserts a cell into the new row\n    cell = row.insertCell(0);\n\n    //Puts the textbox in the new row and focuses the user on the textbox\n    cell.innerHTML = \"<input type='text' id='newHabitInput' placeholder='Enter New Habit!' maxlength=50></input>\";\n    document.getElementById(\"newHabitInput\").focus();\n  }\n  //Else the add habit textbox is already visible\n  else {\n    //Set textbox to invisible\n    textBoxUp = false;\n\n    //Finds the textbox and gets the user given input\n    var newHabit = document.getElementById(\"newHabitInput\").value;\n\n    //If the textbox wasn't empty\n    if (newHabit.length > 0) {\n      //Adds information to the habit object\n      habitObject.activity = newHabit;\n      habitObject.activated = true;\n\n      //Pushes the new habit into the habit array\n      habitsArray.push(habitObject);\n\n      //Add a new row to the end of the table\n      row = habitTable.insertRow(-1);\n      row.id = \"tableRow\" + (habitTable.rows.length - 2);\n\n      //Insert two cells into the row\n      cell = row.insertCell(0);\n\n      //Sets ID based on how many habits there are example: habit1, habit2....\n      id = \"habit\";\n      id += habitTable.rows.length - 2;\n\n      //Sets delete button ID example delete1, delete2....\n      deleteId = \"delete\" + (habitTable.rows.length - 2);\n\n      //Sets up habit with the checkbox string\n      habitHTMLString = \"<button type='button' hidden class='deleteButton' id='\";\n      habitHTMLString += deleteId + \"'>-</button><label class='habitText'for='\";\n      habitHTMLString += id + \"'>\";\n      habitHTMLString += \"<input type='checkbox' id='\";\n      habitHTMLString += id + \"'></input>\";\n      habitHTMLString += newHabit + \"</label>\";\n\n      //The cell will have the text of the habit\n      cell.innerHTML = habitHTMLString;\n    }\n    //Delete the textbox row because the user has added the habit now\n    //Index 1 because index 0 is the header row with the button\n    habitTable.deleteRow(1);\n  }\n};\n\n//Hides or shows buttons if the delete button is pressed\nvar toggleDeleteButton = function toggleDeleteButton(event) {\n  if (showingDeleteButtons === false) {\n    var i;\n    showingDeleteButtons = true;\n    var buttons = document.getElementsByClassName(\"deleteButton\");\n    for (i = 0; i < buttons.length; i++) {\n      buttons[i].removeAttribute(\"hidden\");\n    }\n  } else {\n    showingDeleteButtons = false;\n    var _buttons = document.getElementsByClassName(\"deleteButton\");\n    var _i;\n    for (_i = 0; _i < _buttons.length; _i++) {\n      _buttons[_i].setAttribute(\"hidden\", true);\n    }\n  }\n};\n\n//Checks for checked and unchecked habits as you click them\nvar checkedHabit = function checkedHabit(event) {\n  //Creates an index from the id of the habit. ex. habit1 becomes 0 for the first index of the array\n  var index = event.target.id;\n\n  //If the id has a number in it\n  if (/\\d/.test(index) && index.includes(\"habit\")) {\n    //Remove 'habit' from the id and leave just the number\n    index = index.replaceAll('habit', '');\n\n    //Turn the string into a number\n    index = Number(index);\n\n    //Subtract 1 from our index\n    index -= 1;\n\n    //If it is now checked, set completion to true and add a date of completion\n    if (event.target.checked) {\n      habitsArray[index].isCompleted = true;\n      habitsArray[index].completionDate.day = day;\n      habitsArray[index].completionDate.month = month;\n      habitsArray[index].completionDate.year = year;\n    }\n    //If it is now unchecked, set completion to false and remove date of completion\n    else {\n      habitsArray[index].isCompleted = false;\n      habitsArray[index].completionDate.day = \"\";\n      habitsArray[index].completionDate.month = \"\";\n      habitsArray[index].completionDate.year = \"\";\n    }\n  } else if (/\\d/.test(index)) {\n    //Stores habit number and not the array index\n    var habitNumber;\n\n    //Remove 'delete' from the id and leave just the number\n    index = index.replaceAll('delete', '');\n\n    //Turn the string into a number\n    index = Number(index);\n    habitNumber = index;\n\n    //Subtract 1 from our index\n    index -= 1;\n\n    //Sets habit to no longer active\n    habitsArray[index].activated = false;\n\n    //Hides the delete buttons after row deletion\n    showingDeleteButtons = false;\n    var buttons = document.getElementsByClassName(\"deleteButton\");\n    var i;\n    for (i = 0; i < buttons.length; i++) {\n      buttons[i].setAttribute(\"hidden\", true);\n    }\n\n    //Finds the habit row by id and hides it\n    document.getElementById(\"tableRow\" + habitNumber).setAttribute(\"hidden\", true);\n  }\n};\n\n//Temporary function to update email\nvar updateEmail = function updateEmail(event) {\n  email = document.getElementById(\"emailInput\");\n  emailString = \"mailto:\" + email.value;\n};\nvar Journal = /*#__PURE__*/function (_Component) {\n  _inherits(Journal, _Component);\n  function Journal(props) {\n    var _this;\n    _classCallCheck(this, Journal);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Journal).call(this, props));\n    _this.onChangeMood = function (e) {\n      _this.setState({\n        mood: e.target.value\n      });\n      var shellImage = document.getElementById(\"seashellImg\");\n      switch (e.target.value) {\n        case \"neutral\":\n          shellImage.src = seashell;\n          break;\n        case \"happy\":\n          shellImage.src = happy;\n          break;\n        case \"ecstatic\":\n          shellImage.src = ecstatic;\n          break;\n        case \"excited\":\n          shellImage.src = excited;\n          break;\n        case \"sad\":\n          shellImage.src = sad;\n          break;\n        case \"depressed\":\n          shellImage.src = depressed;\n          break;\n        case \"hopeless\":\n          shellImage.src = hopeless;\n          break;\n        case \"mad\":\n          shellImage.src = mad;\n          break;\n        case \"angry\":\n          shellImage.src = angry;\n          break;\n        case \"disgusted\":\n          shellImage.src = disgusted;\n          break;\n        default:\n          shellImage.src = seashell;\n      }\n      console.log(happy);\n    };\n    _this.onChangeHabit = function (e) {\n      _this.setState({\n        habit: habitsArray\n      });\n    };\n    _this.onChangeDailyText = function (e) {\n      _this.setState({\n        freeResponse: e.target.value\n      });\n    };\n    _this.onChangeMood = _this.onChangeMood.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeHabit = _this.onChangeHabit(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeDailyText = _this.onChangeDailyText.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      _id: \"\",\n      //Username\n      password: \"\",\n      habit: habitsArray,\n      date: {\n        day: 0,\n        month: \"\",\n        year: 0\n      },\n      freeResponse: \"\",\n      mood: \"\"\n    };\n    return _this;\n  }\n  _createClass(Journal, [{\n    key: \"onSubmit\",\n    //SUBMITTING\n    value: function onSubmit(e) {\n      email = document.getElementById(\"emailInput\");\n\n      //Creates an array to store completed habits\n      var completedHabits = [];\n      for (var i = 0; i < habitsArray.length; i++) {\n        if (habitsArray[i].isCompleted === true) {\n          completedHabits.push(habitsArray[i].activity);\n        }\n      }\n      //Turns array into a string\n      completedHabits = completedHabits.toString();\n\n      //Sets the string to a hidden input value for email functionality\n      var habitString = document.getElementById(\"completedHabitsString\");\n      habitString.value = completedHabits;\n      var journal = {\n        date: {\n          day: day,\n          month: month,\n          year: year\n        },\n        freeResponse: this.state.freeResponse,\n        mood: this.state.mood\n      };\n      var habitList = this.state.habit;\n      if (journal.freeResponse.length > 500) {\n        console.log(\"journal is too long!\");\n        return;\n      }\n      console.log(journal);\n      console.log(habitList);\n      //Placeholder text change when form is submitted\n      document.getElementById(\"journalHeader\").innerHTML = \"<center>Submitted!</center>\";\n      if (email.value === \"\") {\n        e.preventDefault();\n        return;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        id: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"journalHeader\",\n        id: \"journalHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }\n      }, \"Rising Tide Bullet Journal\")), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        action: emailString,\n        method: \"post\",\n        target: \"_blank\",\n        encType: \"text/plain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 25\n        }\n      }, \"Enter Email for journal submit debugging (will delete later)\")), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onInput: updateEmail,\n        id: \"emailInput\",\n        type: \"email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"moodTrackingDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        id: \"moodTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: \"seashellImg\",\n        src: seashell,\n        height: \"200px\",\n        alt: \"seashell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        onChange: this.onChangeMood,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtNeutral\",\n        name: \"moodTracker\",\n        value: \"neutral\",\n        className: \"moodTracker\",\n        img: seashell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtNeutral\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 45\n        }\n      }, \"Neutral\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 87\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtHappy\",\n        name: \"moodTracker\",\n        value: \"happy\",\n        className: \"moodTracker\",\n        img: happy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtHappy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 45\n        }\n      }, \"Happy\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 83\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtEcstatic\",\n        name: \"moodTracker\",\n        value: \"ecstatic\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtEcstatic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 45\n        }\n      }, \"Ecstatic\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 89\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtExcited\",\n        name: \"moodTracker\",\n        value: \"excited\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtExcited\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 45\n        }\n      }, \"Excited\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 87\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtSad\",\n        name: \"moodTracker\",\n        value: \"sad\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtSad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 45\n        }\n      }, \"Sad\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 79\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        onChange: this.onChangeMood,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtDepressed\",\n        name: \"moodTracker\",\n        value: \"depressed\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtDepressed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 45\n        }\n      }, \"Depressed\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 91\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtHopeless\",\n        name: \"moodTracker\",\n        value: \"hopeless\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtHopeless\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 45\n        }\n      }, \"Hopeless\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 89\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtMad\",\n        name: \"moodTracker\",\n        value: \"mad\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtMad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 45\n        }\n      }, \"Mad\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 79\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtAngry\",\n        name: \"moodTracker\",\n        value: \"angry\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtAngry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 45\n        }\n      }, \"Angry\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 83\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"mtDisgusted\",\n        name: \"moodTracker\",\n        value: \"disgusted\",\n        className: \"moodTracker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mtDisgusted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 45\n        }\n      }, \"Disgusted\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 91\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"habitWidget\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        id: \"habitTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        onClick: checkedHabit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        id: \"addHabitButton\",\n        onClick: addHabit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 45\n        }\n      }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        id: \"deleteHabitButton\",\n        onClick: toggleDeleteButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 45\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"habitsLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 45\n        }\n      }, \"Habits\")))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        hidden: true,\n        id: \"completedHabitsString\",\n        type: \"text\",\n        name: \"completedHabits\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        required: true,\n        onInput: countChars,\n        onChange: this.onChangeDailyText,\n        placeholder: \"How was your day? How are you feeling?\",\n        maxLength: 500,\n        id: \"dailyAffText\",\n        name: \"freeResponse\",\n        value: this.state.freeResponse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"charactersLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 25\n        }\n      }, \"500 characters left\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        id: \"journalSubmitBtn\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n  return Journal;\n}(Component);\nexport { Journal as default };","map":{"version":3,"names":["React","Component","seashell","happy","ecstatic","excited","sad","depressed","hopeless","mad","angry","disgusted","textBoxUp","habitsArray","day","Date","getDate","toString","month","getMonth","year","getFullYear","showingDeleteButtons","email","emailString","countChars","event","end","target","value","length","document","getElementById","style","val","string","fullString","innerHTML","addHabit","buttons","getElementsByClassName","i","setAttribute","habitTable","row","cell","habitObject","activity","activated","isCompleted","completionDate","id","deleteId","habitHTMLString","insertRow","insertCell","focus","newHabit","push","rows","deleteRow","toggleDeleteButton","removeAttribute","checkedHabit","index","test","includes","replaceAll","Number","checked","habitNumber","updateEmail","Journal","props","onChangeMood","e","setState","mood","shellImage","src","console","log","onChangeHabit","habit","onChangeDailyText","freeResponse","bind","onSubmit","state","_id","password","date","completedHabits","habitString","journal","habitList","preventDefault"],"sources":["C:/Users/gsimp/OneDrive - Knights - University of Central Florida/Desktop/risingTide/Rising_Tide_Bullet_Journal/rising_tide/src/components/journal.component.js"],"sourcesContent":["//JOURNAL PAGE\r\n\r\nimport React, { Component } from 'react';\r\nimport seashell from '../Assets/shell.PNG'\r\nimport happy from '../Assets/happy.PNG'\r\nimport ecstatic from '../Assets/ecstatic.PNG'\r\nimport excited from '../Assets/excited.PNG'\r\nimport sad from '../Assets/sad.PNG'\r\nimport depressed from '../Assets/depressed.PNG'\r\nimport hopeless from '../Assets/hopeless.PNG'\r\nimport mad from '../Assets/mad.PNG'\r\nimport angry from '../Assets/angry.PNG'\r\nimport disgusted from '../Assets/disgusted.PNG'\r\n\r\n\r\n//Value for if the habit input textbox is out or not\r\nlet textBoxUp = false;\r\n\r\n//Creates array for habits (current habits should be loaded into this array from the database)\r\nlet habitsArray = [];\r\n\r\n//Creates a date for this journal (should either be today or a day from the past week)\r\nlet day = new Date().getDate().toString();\r\nlet month = new Date().getMonth()\r\nmonth = month+1;\r\nmonth = month.toString();\r\nlet year = new Date().getFullYear().toString();\r\n\r\n//False if not showing the delete buttons\r\nlet showingDeleteButtons = false;\r\n\r\n//Temporary variables for the email and post commands\r\nlet email, emailString;\r\n\r\n\r\n//Function for counting how many characters are left in the daily affirmation\r\nconst countChars = event => {\r\n\r\n    //Value for an ! if the limit is reached\r\n    let end = \"\";\r\n\r\n    //If limit is reached color the text red and add a !\r\n    if(event.target.value.length === 500)\r\n    {\r\n        document.getElementById(\"charactersLeft\").style = \"color: red\";\r\n        end = \"!\";\r\n    }\r\n    else{\r\n        document.getElementById(\"charactersLeft\").style = \"color: black\";\r\n        end = \"\";\r\n    }\r\n\r\n    //Set up a string for the message counter # + \"characters left\" + optional !\r\n    let val = 500-event.target.value.length;\r\n    let string = \" characters left\";\r\n    let fullString = val + string + end;\r\n\r\n    //Display message\r\n    document.getElementById(\"charactersLeft\").innerHTML = fullString;\r\n}\r\n\r\n//Adds a new habit upon pressing the + button\r\nconst addHabit = event => {\r\n\r\n    //Hides delete buttons\r\n    if(showingDeleteButtons === true){\r\n        showingDeleteButtons = false;\r\n        let buttons = document.getElementsByClassName(\"deleteButton\");\r\n        let i;\r\n        for (i = 0; i < buttons.length; i++) {\r\n            buttons[i].setAttribute(\"hidden\", true); \r\n        }\r\n    }\r\n\r\n    //Finds habit table element\r\n    let habitTable = document.getElementById(\"habitTable\");\r\n\r\n    //Temporary row and cell variables\r\n    let row;\r\n    let cell;\r\n\r\n    //Creates a habit object for the habit being added\r\n    let habitObject = {\r\n        activity: \"\",\r\n        activated: false,\r\n        isCompleted: false,\r\n        completionDate:{\r\n            day:0,\r\n            month:\"\",\r\n            year:0,\r\n        }\r\n    }\r\n\r\n    //Saves ID for the habit\r\n    let id;\r\n\r\n    //Saves ID for delete buttons\r\n    let deleteId;\r\n\r\n    //Saves habit checkbox string for the table\r\n    let habitHTMLString;\r\n\r\n    //If the add habit textbox is not open, it will be opened so the user can add input\r\n    if(textBoxUp === false){\r\n\r\n        //The textbox row is now up\r\n        textBoxUp = true;\r\n\r\n        //creates a row\r\n        row = habitTable.insertRow(1);\r\n\r\n        //inserts a cell into the new row\r\n        cell = row.insertCell(0);\r\n\r\n        //Puts the textbox in the new row and focuses the user on the textbox\r\n        cell.innerHTML = \"<input type='text' id='newHabitInput' placeholder='Enter New Habit!' maxlength=50></input>\";\r\n        document.getElementById(\"newHabitInput\").focus();\r\n    }\r\n    //Else the add habit textbox is already visible\r\n    else{\r\n\r\n        //Set textbox to invisible\r\n        textBoxUp = false;\r\n\r\n        //Finds the textbox and gets the user given input\r\n        let newHabit = document.getElementById(\"newHabitInput\").value;\r\n\r\n        //If the textbox wasn't empty\r\n        if(newHabit.length > 0){\r\n\r\n            //Adds information to the habit object\r\n            habitObject.activity = newHabit;\r\n            habitObject.activated = true;\r\n\r\n            //Pushes the new habit into the habit array\r\n            habitsArray.push(habitObject);\r\n\r\n            //Add a new row to the end of the table\r\n            row = habitTable.insertRow(-1);\r\n            row.id = \"tableRow\" + (habitTable.rows.length - 2);\r\n\r\n            //Insert two cells into the row\r\n            cell = row.insertCell(0);\r\n\r\n            //Sets ID based on how many habits there are example: habit1, habit2....\r\n            id=\"habit\"\r\n            id += (habitTable.rows.length - 2);\r\n\r\n            //Sets delete button ID example delete1, delete2....\r\n            deleteId = \"delete\" + (habitTable.rows.length - 2);\r\n\r\n            //Sets up habit with the checkbox string\r\n            habitHTMLString = \"<button type='button' hidden class='deleteButton' id='\"\r\n            habitHTMLString += deleteId + \"'>-</button><label class='habitText'for='\";\r\n            habitHTMLString += id + \"'>\";\r\n            habitHTMLString +=\"<input type='checkbox' id='\";\r\n            habitHTMLString +=id + \"'></input>\"\r\n            habitHTMLString += newHabit + \"</label>\";\r\n    \r\n            //The cell will have the text of the habit\r\n            cell.innerHTML = habitHTMLString;\r\n        }\r\n        //Delete the textbox row because the user has added the habit now\r\n        //Index 1 because index 0 is the header row with the button\r\n        habitTable.deleteRow(1);\r\n    }\r\n\r\n}\r\n\r\n//Hides or shows buttons if the delete button is pressed\r\nconst toggleDeleteButton = event => {\r\n    if(showingDeleteButtons === false){\r\n        let i;\r\n        showingDeleteButtons=true;\r\n        let buttons = document.getElementsByClassName(\"deleteButton\");\r\n        for (i = 0; i < buttons.length; i++) {\r\n            buttons[i].removeAttribute(\"hidden\"); \r\n        }\r\n    }\r\n    else{\r\n        showingDeleteButtons = false;\r\n        let buttons = document.getElementsByClassName(\"deleteButton\");\r\n        let i;\r\n        for (i = 0; i < buttons.length; i++) {\r\n            buttons[i].setAttribute(\"hidden\", true); \r\n        }\r\n    }\r\n}\r\n\r\n//Checks for checked and unchecked habits as you click them\r\nconst checkedHabit = event => {\r\n    //Creates an index from the id of the habit. ex. habit1 becomes 0 for the first index of the array\r\n    let index = event.target.id;\r\n\r\n    //If the id has a number in it\r\n    if(/\\d/.test(index) && index.includes(\"habit\")){\r\n\r\n        //Remove 'habit' from the id and leave just the number\r\n        index = index.replaceAll('habit', '');\r\n\r\n        //Turn the string into a number\r\n        index = Number(index);\r\n\r\n        //Subtract 1 from our index\r\n        index -= 1;\r\n\r\n        //If it is now checked, set completion to true and add a date of completion\r\n        if(event.target.checked){\r\n            habitsArray[index].isCompleted = true;\r\n            habitsArray[index].completionDate.day = day;\r\n            habitsArray[index].completionDate.month = month;\r\n            habitsArray[index].completionDate.year = year;\r\n\r\n        }\r\n        //If it is now unchecked, set completion to false and remove date of completion\r\n        else{\r\n            habitsArray[index].isCompleted = false;\r\n            habitsArray[index].completionDate.day = \"\";\r\n            habitsArray[index].completionDate.month = \"\";\r\n            habitsArray[index].completionDate.year = \"\";\r\n            \r\n        }\r\n    }\r\n    else if(/\\d/.test(index))\r\n    {\r\n        //Stores habit number and not the array index\r\n        let habitNumber;\r\n\r\n        //Remove 'delete' from the id and leave just the number\r\n        index = index.replaceAll('delete', '');\r\n\r\n        //Turn the string into a number\r\n        index = Number(index);\r\n        habitNumber = index;\r\n\r\n        //Subtract 1 from our index\r\n        index -= 1;\r\n\r\n        //Sets habit to no longer active\r\n        habitsArray[index].activated = false;\r\n\r\n        //Hides the delete buttons after row deletion\r\n        showingDeleteButtons = false;\r\n        let buttons = document.getElementsByClassName(\"deleteButton\");\r\n        let i;\r\n        for (i = 0; i < buttons.length; i++) {\r\n            buttons[i].setAttribute(\"hidden\", true); \r\n        }\r\n\r\n        //Finds the habit row by id and hides it\r\n        document.getElementById(\"tableRow\" + habitNumber).setAttribute(\"hidden\", true);\r\n\r\n    }\r\n}\r\n\r\n//Temporary function to update email\r\nconst updateEmail = event => {\r\n    email = document.getElementById(\"emailInput\");\r\n    emailString = \"mailto:\" + email.value;\r\n}\r\n\r\nexport default class Journal extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.onChangeMood = this.onChangeMood.bind(this);\r\n        this.onChangeHabit = this.onChangeHabit(this);\r\n        this.onChangeDailyText = this.onChangeDailyText.bind(this);\r\n        \r\n        this.onSubmit=this.onSubmit.bind(this);\r\n\r\n        this.state={\r\n\t\t\t_id:\"\",//Username\r\n\t\t\tpassword:\"\",\r\n\t\t\t\r\n\r\n\t\t\thabit:habitsArray,\r\n\t\t\t\r\n\t\t\tdate:{\r\n\t\t\t\tday:0,\r\n\t\t\t\tmonth:\"\",\r\n\t\t\t\tyear:0,\r\n\t\t\t},\r\n\t\t\t\t\r\n\t\t\tfreeResponse:\"\",\r\n\t\t\t\t\r\n\t\t\tmood:\"\"\r\n\t\t}\r\n    }\r\n    \r\n    onChangeMood = e =>{\r\n        this.setState({\r\n            mood: e.target.value\r\n      });\r\n      let shellImage = document.getElementById(\"seashellImg\");\r\n      switch (e.target.value) {\r\n        case \"neutral\":\r\n            shellImage.src = seashell;\r\n            break;\r\n        case \"happy\":\r\n            shellImage.src = happy;\r\n            break;\r\n        case \"ecstatic\":\r\n            shellImage.src = ecstatic;\r\n            break;\r\n\r\n        case \"excited\":\r\n            shellImage.src = excited;\r\n            break;\r\n\r\n        case \"sad\":\r\n            shellImage.src = sad;\r\n            break;\r\n        case \"depressed\":\r\n            shellImage.src = depressed;\r\n            break;\r\n\r\n        case \"hopeless\":\r\n            shellImage.src = hopeless;\r\n            break;\r\n\r\n        case \"mad\":\r\n            shellImage.src = mad;\r\n            break;\r\n\r\n        case \"angry\":\r\n            shellImage.src = angry;\r\n            break;\r\n\r\n        case \"disgusted\":\r\n            shellImage.src = disgusted;\r\n            break;\r\n\r\n        default:\r\n            shellImage.src = seashell;     \r\n      }\r\n      \r\n      console.log(happy);\r\n    }\r\n\r\n    onChangeHabit = e =>{\r\n        this.setState({\r\n            habit: habitsArray\r\n      });\r\n\r\n    }\r\n\r\n    onChangeDailyText = e =>{\r\n        this.setState({\r\n            freeResponse: e.target.value\r\n      });\r\n    }\r\n\r\n    //SUBMITTING\r\n    onSubmit(e) {\r\n        email = document.getElementById(\"emailInput\");\r\n        \r\n        //Creates an array to store completed habits\r\n        let completedHabits = [];\r\n        for(let i = 0; i < habitsArray.length; i++){\r\n            if(habitsArray[i].isCompleted === true)\r\n            {\r\n                completedHabits.push(habitsArray[i].activity);\r\n            }\r\n        }\r\n        //Turns array into a string\r\n        completedHabits = completedHabits.toString();\r\n\r\n        //Sets the string to a hidden input value for email functionality\r\n        let habitString = document.getElementById(\"completedHabitsString\");\r\n        habitString.value=completedHabits;\r\n\r\n        let journal = {\r\n            date:{\r\n                day:day,\r\n                month:month,\r\n                year:year,\r\n            },\r\n            \r\n            freeResponse: this.state.freeResponse,\r\n            \r\n            mood: this.state.mood\r\n        }\r\n\r\n        let habitList = this.state.habit;\r\n\r\n        if(journal.freeResponse.length > 500)\r\n        {\r\n            console.log(\"journal is too long!\")\r\n            return;\r\n        }\r\n        console.log(journal);\r\n        console.log(habitList);\r\n        //Placeholder text change when form is submitted\r\n        document.getElementById(\"journalHeader\").innerHTML = \"<center>Submitted!</center>\"\r\n        if(email.value===\"\"){\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\" id=\"container\">\r\n                <h1 className=\"journalHeader\" id=\"journalHeader\"> \r\n                    <center>\r\n                        Rising Tide Bullet Journal\r\n                    </center> \r\n                </h1>\r\n\r\n                \r\n\r\n                <form onSubmit={this.onSubmit} action={emailString} method=\"post\" target=\"_blank\" encType='text/plain'>\r\n                <center><p>Enter Email for journal submit debugging (will delete later)</p></center>\r\n                <center><input onInput={updateEmail} id=\"emailInput\" type=\"email\" required></input></center>\r\n                    <div id=\"moodTrackingDiv\">\r\n                        <table id=\"moodTable\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <center>\r\n                                            <img id=\"seashellImg\" src={seashell} height=\"200px\" alt=\"seashell\"/>\r\n                                        </center>\r\n                                    </td>\r\n                                    <td>\r\n                                        <center  onChange={this.onChangeMood}>\r\n                                            <input type=\"radio\" id=\"mtNeutral\" name=\"moodTracker\" value=\"neutral\" className=\"moodTracker\" img={seashell}></input>\r\n                                            <label htmlFor=\"mtNeutral\">Neutral</label><br/>\r\n\r\n                                            <input type=\"radio\" id=\"mtHappy\" name=\"moodTracker\" value=\"happy\" className=\"moodTracker\" img={happy}></input>\r\n                                            <label htmlFor=\"mtHappy\">Happy</label><br/>\r\n\r\n                                            <input type=\"radio\" id=\"mtEcstatic\" name=\"moodTracker\" value=\"ecstatic\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtEcstatic\">Ecstatic</label><br/>\r\n\r\n                                            <input type=\"radio\" id=\"mtExcited\" name=\"moodTracker\" value=\"excited\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtExcited\">Excited</label><br/>\r\n                                            \r\n                                            <input type=\"radio\" id=\"mtSad\" name=\"moodTracker\" value=\"sad\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtSad\">Sad</label><br/>\r\n                                        </center>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <center  onChange={this.onChangeMood}>\r\n                                            <input type=\"radio\" id=\"mtDepressed\" name=\"moodTracker\" value=\"depressed\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtDepressed\">Depressed</label><br/>\r\n\r\n                                            <input type=\"radio\" id=\"mtHopeless\" name=\"moodTracker\" value=\"hopeless\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtHopeless\">Hopeless</label><br/>\r\n\r\n                                            <input type=\"radio\" id=\"mtMad\" name=\"moodTracker\" value=\"mad\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtMad\">Mad</label><br/>\r\n\r\n                                            <input type=\"radio\" id=\"mtAngry\" name=\"moodTracker\" value=\"angry\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtAngry\">Angry</label><br/>\r\n\r\n                                            <input type=\"radio\" id=\"mtDisgusted\" name=\"moodTracker\" value=\"disgusted\" className=\"moodTracker\"></input>\r\n                                            <label htmlFor=\"mtDisgusted\">Disgusted</label><br/>\r\n                                        </center>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br/>\r\n                        <div id=\"habitWidget\">\r\n                            <table id=\"habitTable\">\r\n                                <tbody onClick={checkedHabit}>\r\n                                    <tr>\r\n                                        <th>\r\n                                            <button type=\"button\" id=\"addHabitButton\" onClick={addHabit}>+</button>\r\n                                            <button type=\"button\" id=\"deleteHabitButton\" onClick={toggleDeleteButton}>-</button>\r\n                                            <p id=\"habitsLabel\">Habits</p>\r\n                                        </th>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    <br/>\r\n                    <center>\r\n                        <input hidden id = \"completedHabitsString\" type=\"text\" name=\"completedHabits\"></input>\r\n                        <textarea required onInput={countChars} onChange={this.onChangeDailyText} placeholder=\"How was your day? How are you feeling?\" maxLength={500} id=\"dailyAffText\" name = \"freeResponse\" value={this.state.freeResponse}></textarea>\r\n                        <p id=\"charactersLeft\">500 characters left</p>\r\n                    \r\n                        <button type=\"submit\" id=\"journalSubmitBtn\" className=\"btn btn-primary\">Submit</button>\r\n                    \r\n                    </center>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}