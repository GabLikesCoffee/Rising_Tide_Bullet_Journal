{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\gsimp\\\\OneDrive - Knights - University of Central Florida\\\\Desktop\\\\risingTide\\\\Rising_Tide_Bullet_Journal\\\\rising_tide\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./AuthService\";\nvar user = JSON.parse(localStorage.getItem(\"user\"));\nvar initialState = {\n  user: user ? user : null,\n  errorDetected: false,\n  success: false,\n  isLoading: false,\n  message: \"\"\n};\nexport var register = createAsyncThunk(\"http://localhost:5000/users/add\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(user, thunkAPI) {\n    var messageError;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return authService.register(user);\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            messageError = _context.t0.response && _context.t0.response.data.message || _context.t0.toString();\n            return _context.abrupt(\"return\", thunkAPI.rejectWithValue(messageError));\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    reset: function reset(state) {\n      state.isLoading = false;\n      state.success = false;\n      state.errorDetected = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(register.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.success = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, function (state, action) {\n      state.isLoading = false;\n      state.errorDetected = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nvar reset = authSlice.actions.reset;\nexport { reset };\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","errorDetected","success","isLoading","message","register","thunkAPI","messageError","response","data","toString","rejectWithValue","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/gsimp/OneDrive - Knights - University of Central Florida/Desktop/risingTide/Rising_Tide_Bullet_Journal/rising_tide/src/features/auth/authSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport authService from \"./AuthService\"\r\n\r\n\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\nconst initialState={\r\n    user: user ? user:null,\r\n    errorDetected: false,\r\n    success: false,\r\n    isLoading: false,\r\n    message:\"\"\r\n}\r\n\r\nexport const register = createAsyncThunk(\"http://localhost:5000/users/add\", \r\n    async (user, thunkAPI)=>{\r\n        try{\r\n            return await authService.register(user)\r\n        }\r\n        catch (error){\r\n            const messageError= (error.response && error.response.data.message)|| error.toString()\r\n            return thunkAPI.rejectWithValue(messageError)\r\n        }\r\n    })\r\n\r\nexport const authSlice= createSlice({\r\n    \r\n    name: \"auth\",\r\n    initialState,\r\n    reducers:{\r\n        reset: (state)=>{\r\n            state.isLoading=false\r\n            state.success=false\r\n            state.errorDetected=false\r\n            state.message=\"\"\r\n            \r\n        }\r\n    },\r\n    extraReducers:(builder)=>{\r\n        builder\r\n            .addCase(register.pending,(state)=>{\r\n                state.isLoading=true\r\n            })\r\n            .addCase(register.fulfilled,(state,action)=>{\r\n                state.isLoading=false\r\n                state.success=true\r\n                state.user= action.payload\r\n            })\r\n            .addCase(register.rejected,(state,action)=>{\r\n                state.isLoading=false\r\n                state.errorDetected=true\r\n                state.message= action.payload\r\n                state.user=null\r\n            })\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const {reset} = authSlice.actions\r\nexport default authSlice.reducer"],"mappings":";+CACA;AADA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,WAAW,MAAM,eAAe;AAIvC,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErD,IAAMC,YAAY,GAAC;EACfL,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAC,IAAI;EACtBM,aAAa,EAAE,KAAK;EACpBC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAC;AACZ,CAAC;AAED,OAAO,IAAMC,QAAQ,GAAGZ,gBAAgB,CAAC,iCAAiC;EAAA,sEACtE,iBAAOE,IAAI,EAAEW,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEAZ,WAAW,CAACW,QAAQ,CAACV,IAAI,CAAC;UAAA;YAAA;UAAA;YAAA;YAAA;YAGjCY,YAAY,GAAG,YAAMC,QAAQ,IAAI,YAAMA,QAAQ,CAACC,IAAI,CAACL,OAAO,IAAI,YAAMM,QAAQ,EAAE;YAAA,iCAC/EJ,QAAQ,CAACK,eAAe,CAACJ,YAAY,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEpD;EAAA;IAAA;EAAA;AAAA,IAAC;AAEN,OAAO,IAAMK,SAAS,GAAEpB,WAAW,CAAC;EAEhCqB,IAAI,EAAE,MAAM;EACZb,YAAY,EAAZA,YAAY;EACZc,QAAQ,EAAC;IACLC,KAAK,EAAE,eAACC,KAAK,EAAG;MACZA,KAAK,CAACb,SAAS,GAAC,KAAK;MACrBa,KAAK,CAACd,OAAO,GAAC,KAAK;MACnBc,KAAK,CAACf,aAAa,GAAC,KAAK;MACzBe,KAAK,CAACZ,OAAO,GAAC,EAAE;IAEpB;EACJ,CAAC;EACDa,aAAa,EAAC,uBAACC,OAAO,EAAG;IACrBA,OAAO,CACFC,OAAO,CAACd,QAAQ,CAACe,OAAO,EAAC,UAACJ,KAAK,EAAG;MAC/BA,KAAK,CAACb,SAAS,GAAC,IAAI;IACxB,CAAC,CAAC,CACDgB,OAAO,CAACd,QAAQ,CAACgB,SAAS,EAAC,UAACL,KAAK,EAACM,MAAM,EAAG;MACxCN,KAAK,CAACb,SAAS,GAAC,KAAK;MACrBa,KAAK,CAACd,OAAO,GAAC,IAAI;MAClBc,KAAK,CAACrB,IAAI,GAAE2B,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDJ,OAAO,CAACd,QAAQ,CAACmB,QAAQ,EAAC,UAACR,KAAK,EAACM,MAAM,EAAG;MACvCN,KAAK,CAACb,SAAS,GAAC,KAAK;MACrBa,KAAK,CAACf,aAAa,GAAC,IAAI;MACxBe,KAAK,CAACZ,OAAO,GAAEkB,MAAM,CAACC,OAAO;MAC7BP,KAAK,CAACrB,IAAI,GAAC,IAAI;IACnB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAAA,IAIYoB,KAAK,GAAIH,SAAS,CAACa,OAAO,CAA1BV,KAAK;AAAA;AACnB,eAAeH,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module"}